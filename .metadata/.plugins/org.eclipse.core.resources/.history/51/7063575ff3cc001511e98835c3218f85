#include "WPILib.h"
#include "Joystick.h"
#include "nt_Value.h"
/**
 * This is a demo program showing the use of the RobotDrive class.
 * The SampleRobot class is the base of a robot application that will automatically call your
 * Autonomous and OperatorControl methods at the right time as controlled by the switches on
 * the driver station or the field controls.
 *
 * WARNING: While it may look like a good choice to use for your code if you're inexperienced,
 * don't. Unless you know what you are doing, complex code will be much more difficult under
 * this system. Use IterativeRobot or Command-Based instead if you're new.
 */
class Robot: public SampleRobot
{
	RobotDrive myRobot; // robot drive system
	Joystick stick; // only joystick
	Victor shooter;

public:
	Robot() :
			myRobot(0, 1, 2, 3),
			stick(0),
			shooter(4)
	{
		myRobot.SetExpiration(0.1);
	}
	/**
	 * Runs the motors with arcade steering.
	 */
	void OperatorControl()
	{
		while (IsOperatorControl() && IsEnabled())
		{
			std::shared_ptr<nt::Value> xValue = SmartDashboard::GetValue("COG_X");
			double xVal = xValue->GetDouble();
			if(160-xVal>5){
				myRobot.TankDrive(-0.25,0.25);
				std::printf("Turning Left");
			}
			if(160-xVal<-5){
				myRobot.TankDrive(0.25,-0.25);
				std::printf("Turning Right");
			}
			/*
			if(stick.GetRawButton(1)){
				shooter.Set(.6);
			}
			else
				shooter.Set(0);
				*/
			//else
				//myRobot.TankDrive(-1*stick.GetRawAxis(1),-1*stick.GetRawAxis(5));
			Wait(0.005);
		}
		}
};


START_ROBOT_CLASS(Robot)
